{"version":3,"file":"static/webpack/static\\development\\pages\\app.js.439ba5019af2d6739e3a.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport {db} from '../lib/db'\r\nimport {distance} from '../lib/geo'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/');\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status');\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreate){\r\n        return null;\r\n    }   \r\n    return (\r\n        <div>\r\n            <h1>Status proximos a vocÃª</h1>\r\n            <table>\r\n                    {props.chekins.map(checkin => {\r\n                        return (\r\n                                <tr>\r\n                                    <td>{checkin.id === user.sub}</td>\r\n                                    <td>{checkin.status}</td>\r\n                                    <td>{JSON.stringify(checkin.coords)}</td>\r\n                                    <td>{checkin.distance}</td>\r\n                                </tr>\r\n                        )\r\n                    })}\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\nexport async function getServerSideProps({ req, res }){\r\n    const session = await auth0.getSession(req);\r\n    console.log(session);\r\n\r\n    if(session){\r\n        const today = new Date();\r\n        const currentDate = today.getFullYear()+'-'+today.getMonth()+'-'+today.getDay();\r\n\r\n        const checkToday = await db.collection('markers')\r\n          .doc(currentDate)\r\n          .collection('checks')\r\n          .doc(session.user.sub)\r\n          .get();\r\n\r\n\r\n        const todayData = checkToday.data();\r\n        let forceCreate = true;\r\n\r\n        if(todayData){\r\n            //pode ver outros checkins\r\n            forceCreate = false;\r\n            const checkins  = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .near({\r\n                center: todayData.coordinates,\r\n                radius: 1000\r\n            })\r\n            .get();\r\n\r\n            const checkinsList = [];\r\n            checkins.docs.forEach(element => {\r\n                checkinsList.push({\r\n                    id: element.id,\r\n                    status: element.data().status,\r\n                    coords: {\r\n                        lat: element.data().coordinates.latitude,\r\n                        long: element.data().coordinates.longitude\r\n                    },\r\n                    distance: distance(todayData.coordinates.latitude,\r\n                                       todayData.coordinates.longitude,\r\n                                       element.data().coordinates.latitude,\r\n                                       element.data().coordinates.longitude)\r\n                })\r\n            })\r\n\r\n            return {\r\n                props:{\r\n                   user: session.user,\r\n                   isAuth: true,\r\n                   forceCreate: false,\r\n                   chekins: checkinsList\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n\r\n        return {\r\n            props:{\r\n               user: session.user,\r\n               isAuth: true,\r\n               forceCreate\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        props:{\r\n            isAuth: false,\r\n            user:{\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;;AAEA;;;;A","sourceRoot":""}